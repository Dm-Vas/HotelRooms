// <auto-generated />
using System;
using HotelRoomsApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelRoomsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231012235027_ChangeNullableToFalse")]
    partial class ChangeNullableToFalse
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelRoomsApi.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 1,
                            CreatedDate = new DateTime(2023, 10, 12, 16, 50, 27, 723, DateTimeKind.Local).AddTicks(4106),
                            Description = "Room Description 1",
                            Name = "Room Name 1",
                            Price = 100.0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 1,
                            CreatedDate = new DateTime(2023, 10, 12, 16, 50, 27, 723, DateTimeKind.Local).AddTicks(4152),
                            Description = "Room Description 2",
                            Name = "Room Name 2",
                            Price = 100.0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 2,
                            CreatedDate = new DateTime(2023, 10, 12, 16, 50, 27, 723, DateTimeKind.Local).AddTicks(4155),
                            Description = "Room Description 3",
                            Name = "Room Name 3",
                            Price = 70.0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 2,
                            CreatedDate = new DateTime(2023, 10, 12, 16, 50, 27, 723, DateTimeKind.Local).AddTicks(4157),
                            Description = "Room Description 4",
                            Name = "Room Name 4",
                            Price = 70.0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 3,
                            CreatedDate = new DateTime(2023, 10, 12, 16, 50, 27, 723, DateTimeKind.Local).AddTicks(4159),
                            Description = "Room Description 5",
                            Name = "Room Name 5",
                            Price = 50.0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotelRoomsApi.Models.RoomNumber", b =>
                {
                    b.Property<int>("RoomNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoomNo");

                    b.HasIndex("RoomID");

                    b.ToTable("RoomNumbers");
                });

            modelBuilder.Entity("HotelRoomsApi.Models.RoomNumber", b =>
                {
                    b.HasOne("HotelRoomsApi.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
